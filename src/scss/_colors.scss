// Material colors map
$matPalettes: (
  primary: $primary,
  accent: $accent,
  warn: $warn,
  "red": $mat-red,
  "pink": $mat-pink,
  "purple": $mat-purple,
  "deep-purple": $mat-deep-purple,
  "indigo": $mat-indigo,
  "blue": $mat-blue,
  "light-blue": $mat-light-blue,
  "cyan": $mat-cyan,
  "teal": $mat-teal,
  "green": $mat-green,
  "light-green": $mat-light-green,
  "lime": $mat-lime,
  "yellow": $mat-yellow,
  "amber": $mat-amber,
  "orange": $mat-orange,
  "deep-orange": $mat-deep-orange,
  "brown": $mat-brown,
  "grey": $mat-grey,
  "blue-grey": $mat-blue-grey,
  "white": $mat-white,
  "black": $mat-black,
  "sales": $vs-sales,
);

// Material color hues list
$matHues: 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, A100, A200, A400,
  A700;

// Color classes generator mixin
@mixin generateColorClasses($colorName, $color, $contrastColor, $hue) {
  .#{$colorName}#{$hue}-bg {
    background-color: $color !important;
  }

  .mat-#{$colorName}#{$hue}-bg {
    background-color: $color !important;
    color: $contrastColor !important;

    &[disabled] {
      background-color: rgba($color, 0.12) !important;
      color: rgba($contrastColor, 0.26) !important;
    }
  }

  .#{$colorName}#{$hue}-fg {
    color: $color !important;
  }

  .#{$colorName}#{$hue}-border {
    border-color: $color !important;
  }

  .#{$colorName}#{$hue}-border-top {
    border-top-color: $color !important;
  }

  .#{$colorName}#{$hue}-border-right {
    border-right-color: $color !important;
  }

  .#{$colorName}#{$hue}-border-bottom {
    border-bottom-color: $color !important;
  }

  .#{$colorName}#{$hue}-border-left {
    border-left-color: $color !important;
  }
}

// Generate the color classes...

// Define contrast lists
$light-contrasting-classes: ();
$dark-contrasting-classes: ();

@each $paletteName, $palette in $matPalettes {
  // Get the contrasts map
  $contrasts: map-get($palette, "contrast");

  @each $hue in $matHues {
    // Get the color and the contrasting color
    $color: map-get($palette, $hue);
    $contrast: map-get($contrasts, $hue);

    @if ($color != null and $contrast != null) {
      // Generate color classes
      @include generateColorClasses(
        $paletteName,
        $color,
        $contrast,
        "-#{$hue}"
      );

      // Add color to the correct list depending on the contrasting color

      // If the contrast color is dark
      @if (rgba(black, 1) == rgba($contrast, 1)) {
        $dark-contrasting-classes: append(
          $dark-contrasting-classes,
          unquote(".mat-#{$paletteName}-#{$hue}-bg"),
          "comma"
        );
      }
      // if the contrast color is light
      @else {
        $light-contrasting-classes: append(
          $light-contrasting-classes,
          unquote(".mat-#{$paletteName}-#{$hue}-bg"),
          "comma"
        );
      }

      // Run the generator one more time for default values (500)
      @if ($hue == 500) {
        // Generate color classes
        @include generateColorClasses($paletteName, $color, $contrast, "");

        // Add color to the correct list depending on the contrasting color

        // If the contrast color is dark
        @if (rgba(black, 1) == rgba($contrast, 1)) {
          $dark-contrasting-classes: append(
            $dark-contrasting-classes,
            unquote(".mat-#{$paletteName}-bg"),
            "comma"
          );
        }
        // if the contrast color is light
        @else {
          $light-contrasting-classes: append(
            $light-contrasting-classes,
            unquote(".mat-#{$paletteName}-bg"),
            "comma"
          );
        }
      }
    }
  }
}
